{"version":3,"file":"plan.factory.js","sources":["../../../../src/weaver/plan.factory.ts"],"sourcesContent":["import {\n    _getWeaverContext,\n    _JoinpointFactory,\n    Advice,\n    AdviceTarget,\n    AdviceType,\n    CompileAdvice,\n    MutableAdviceContext,\n    PointcutPhase,\n    WeaverContext,\n    WeavingError,\n} from '@aspectjs/core/commons';\nimport { assert } from '@aspectjs/core/utils';\nimport { _WeavingStrategy } from './weaving-strategy';\n\n/**\n * @internal\n */\nexport class _AdviceExecutionPlanFactory {\n    create<T, A extends AdviceType = any>(\n        target: AdviceTarget<T, A>,\n        hooks: _WeavingStrategy<T, A>,\n        filter?: {\n            name: string;\n            fn: (a: Advice) => boolean;\n        },\n    ): _ExecutionPlan<T, A> {\n        let compiled = false;\n        let compiledSymbol: A extends AdviceType.CLASS ? { new (...args: any[]): T } : PropertyDescriptor;\n\n        const linkFn = (ctxt: MutableAdviceContext<T, A>) => {\n            if (!compiled) {\n                compileFn(ctxt);\n            }\n            assert(!!compiledSymbol);\n\n            const jp = function (...args: any[]): T {\n                ctxt.args = args;\n                ctxt.instance = this;\n                const advicesReg = _getWeaverContext().aspects.registry.getAdvicesByTarget(\n                    ctxt.target,\n                    filter,\n                    PointcutPhase.BEFORE,\n                    PointcutPhase.AROUND,\n                    PointcutPhase.AFTERRETURN,\n                    PointcutPhase.AFTERTHROW,\n                    PointcutPhase.AFTER,\n                );\n\n                // create the joinpoint for the original method\n                const jp = _JoinpointFactory.create(null, ctxt, (...args: any[]) => {\n                    const restoreJp = ctxt.joinpoint;\n                    const restoreArgs = ctxt.args;\n                    ctxt.args = args;\n                    delete ctxt.joinpoint;\n\n                    try {\n                        hooks.preBefore?.call(hooks, ctxt);\n                        hooks.before(ctxt, advicesReg[PointcutPhase.BEFORE] as Advice<T, A, PointcutPhase.BEFORE>[]);\n\n                        hooks.initialJoinpoint.call(hooks, ctxt, compiledSymbol);\n\n                        hooks.preAfterReturn?.call(hooks, ctxt);\n                        return hooks.afterReturn(\n                            ctxt,\n                            advicesReg[PointcutPhase.AFTERRETURN] as Advice<T, A, PointcutPhase.AFTERRETURN>[],\n                        );\n                    } catch (e) {\n                        // consider WeavingErrors as not recoverable by an aspect\n                        if (e instanceof WeavingError) {\n                            throw e;\n                        }\n                        ctxt.error = e;\n\n                        hooks.preAfterThrow?.call(hooks, ctxt);\n                        return hooks.afterThrow(\n                            ctxt,\n                            advicesReg[PointcutPhase.AFTERTHROW] as Advice<T, A, PointcutPhase.AFTERTHROW>[],\n                        );\n                    } finally {\n                        delete ctxt.error;\n                        hooks.preAfter?.call(hooks, ctxt);\n                        hooks.after(ctxt, advicesReg[PointcutPhase.AFTER] as Advice<T, A, PointcutPhase.AFTER>[]);\n                        ctxt.joinpoint = restoreJp;\n                        ctxt.args = restoreArgs;\n                    }\n                });\n\n                hooks.preAround?.call(hooks, ctxt);\n                return hooks.around(\n                    ctxt,\n                    advicesReg[PointcutPhase.AROUND] as Advice<T, A, PointcutPhase.AROUND>[],\n                    jp,\n                )(args);\n            };\n\n            return hooks.finalize.call(hooks, ctxt, jp) ?? jp;\n        };\n        const compileFn = (ctxt: MutableAdviceContext<T, A>) => {\n            const compileAdvices = _getWeaverContext().aspects.registry.getAdvicesByTarget(\n                ctxt.target,\n                filter,\n                PointcutPhase.COMPILE,\n            )[PointcutPhase.COMPILE];\n            compiledSymbol = hooks.compile(ctxt, compileAdvices as CompileAdvice<T, A>[]);\n            compiled = true;\n            if (!compiledSymbol) {\n                throw new WeavingError(\n                    `${Reflect.getPrototypeOf(hooks).constructor.name}.compile() did not returned a symbol`,\n                );\n            }\n            return compiledSymbol;\n        };\n        return new _ExecutionPlan<T, A>(compileFn, linkFn);\n    }\n}\n\ntype WeaverCompile<T = unknown, A extends AdviceType = any> = (\n    ctxt: MutableAdviceContext<T, A>,\n) => A extends AdviceType.CLASS ? { new (...args: any[]): T } : PropertyDescriptor;\n\ntype WeaverLink<T = unknown, A extends AdviceType = any> = (\n    ctxt: MutableAdviceContext<T, A>,\n    initialSymbol: A extends AdviceType.CLASS ? { new (...args: any[]): T } : PropertyDescriptor,\n) => A extends AdviceType.CLASS ? { new (...args: any[]): T } : PropertyDescriptor;\n/**\n * Sort the advices according to their precedence & store by phase & type, so they are ready to execute.\n * @internal\n */\nexport class _ExecutionPlan<T = unknown, A extends AdviceType = any> {\n    constructor(private compileFn: WeaverCompile<T, A>, private linkFn: WeaverLink<T, A>) {}\n\n    compile<C extends MutableAdviceContext<T, A>>(\n        ctxt: C,\n    ): {\n        link: () => A extends AdviceType.CLASS ? { new (...args: any[]): T } : PropertyDescriptor;\n    } {\n        const compiled = this.compileFn(ctxt);\n        const link = this.linkFn;\n        return {\n            /**\n             * Returns a function that executes the plan for the Before, Around, AfterReturn, AfterThrow & After advices.\n             */\n            link: () => link(ctxt, compiled),\n        };\n    }\n}\n"],"names":[],"mappings":"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"}