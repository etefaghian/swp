{"version":3,"file":"property-get-weaving-strategy.js","sources":["../../../../../../src/weaver/jit/strategies/property-get-weaving-strategy.ts"],"sourcesContent":["import {\n    _JoinpointFactory,\n    AdviceError,\n    AdviceTarget,\n    AdviceType,\n    AnnotationType,\n    CompileAdvice,\n    MutableAdviceContext,\n} from '@aspectjs/core/commons';\nimport { assert, getOrComputeMetadata, isFunction, isUndefined, Mutable } from '@aspectjs/core/utils';\nimport { _GenericWeavingStrategy } from './generic-weaving-strategy';\n\n/**\n * @internal\n */\nexport class _PropertyGetWeavingStrategy<T> extends _GenericWeavingStrategy<T, AdviceType.PROPERTY> {\n    private compiledDescriptor: PropertyDescriptor;\n\n    compile(\n        ctxt: MutableAdviceContext<T, AdviceType.PROPERTY>,\n        advices: CompileAdvice<T, AdviceType.PROPERTY>[],\n    ): AdviceType.PROPERTY extends AdviceType.METHOD\n        ? () => T\n        : AdviceType.PROPERTY extends AdviceType.CLASS\n        ? { new (...args: any[]): T }\n        : PropertyDescriptor {\n        const target = ctxt.target;\n        if (this.compiledDescriptor) {\n            return this.compiledDescriptor;\n        }\n\n        // if another @Compile advice has been applied\n        // replace wrapped descriptor by original descriptor before it gets wrapped again\n        (target as Mutable<AdviceTarget>).descriptor = getOrComputeMetadata(\n            'aspectjs.originalDescriptor',\n            target.proto,\n            target.propertyKey,\n            () => {\n                return (\n                    Reflect.getOwnPropertyDescriptor(target.proto, target.propertyKey) ?? {\n                        configurable: true,\n                        enumerable: true,\n                        get() {\n                            return Reflect.getOwnMetadata(`aspectjs.propValue`, this, target.propertyKey);\n                        },\n                        set(value: any) {\n                            Reflect.defineMetadata(`aspectjs.propValue`, value, this, target.propertyKey);\n                        },\n                    }\n                );\n            },\n            true,\n        );\n\n        let advice: CompileAdvice<T, AdviceType.PROPERTY>;\n        let newDescriptor: PropertyDescriptor = ctxt.target.descriptor;\n\n        advices.forEach((advice) => {\n            ctxt.advice = advice;\n            newDescriptor = advice(ctxt) ?? newDescriptor;\n        });\n        delete ctxt.advice;\n\n        if (newDescriptor) {\n            if (Reflect.getOwnPropertyDescriptor(target.proto, target.propertyKey)?.configurable === false) {\n                throw new AdviceError(advice, `${target.label} is not configurable`);\n            }\n\n            // test property validity\n            const surrogate = { prop: '' };\n            const surrogateProp = Reflect.getOwnPropertyDescriptor(surrogate, 'prop');\n            if (isUndefined(newDescriptor.enumerable)) {\n                newDescriptor.enumerable = surrogateProp.enumerable;\n            }\n\n            if (isUndefined(newDescriptor.configurable)) {\n                newDescriptor.configurable = surrogateProp.configurable;\n            }\n\n            // normalize the descriptor\n            newDescriptor = Object.getOwnPropertyDescriptor(\n                Object.defineProperty(surrogate, 'newProp', newDescriptor),\n                'newProp',\n            );\n\n            Reflect.defineProperty(target.proto, target.propertyKey, newDescriptor);\n        }\n\n        if ((newDescriptor as Record<string, any>).hasOwnProperty('value')) {\n            const propValue = newDescriptor.value;\n            newDescriptor.get = () => propValue;\n            delete newDescriptor.writable;\n            delete newDescriptor.value;\n        }\n\n        return (this.compiledDescriptor = newDescriptor);\n    }\n\n    preBefore(ctxt: MutableAdviceContext<T, AdviceType.PROPERTY>): void {\n        ctxt.args = [];\n    }\n\n    initialJoinpoint(ctxt: MutableAdviceContext<T, AdviceType.PROPERTY>, originalDescriptor: PropertyDescriptor): void {\n        assert(isFunction(originalDescriptor.get));\n        ctxt.value = _JoinpointFactory.create(null, ctxt, originalDescriptor.get)();\n    }\n\n    finalize(\n        ctxt: MutableAdviceContext<T, AnnotationType.PROPERTY>,\n        joinpoint: (...args: any[]) => T,\n    ): AnnotationType.PROPERTY extends AnnotationType.CLASS ? { new (...args: any[]): T } : PropertyDescriptor {\n        const newDescriptor = {\n            ...this.compiledDescriptor,\n            get: joinpoint,\n        };\n\n        // test property validity\n        Object.getOwnPropertyDescriptor(Object.defineProperty({}, 'surrogate', newDescriptor), 'surrogate');\n\n        return newDescriptor;\n    }\n}\n"],"names":[],"mappings":"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"}