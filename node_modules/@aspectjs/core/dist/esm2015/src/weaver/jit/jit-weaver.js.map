{"version":3,"file":"jit-weaver.js","sources":["../../../../../src/weaver/jit/jit-weaver.ts"],"sourcesContent":["import {\n    Advice,\n    AdviceTarget,\n    AdviceType,\n    AnnotationsBundle,\n    AnnotationTarget,\n    AnnotationType,\n    AspectType,\n    JoinPoint,\n    MutableAdviceContext,\n    Pointcut,\n    Weaver,\n    WeaverContext,\n    WeaverProfile,\n    WeavingError,\n} from '@aspectjs/core/commons';\nimport { isFunction } from '@aspectjs/core/utils';\nimport { _AdviceExecutionPlanFactory } from '../plan.factory';\nimport { _ClassWeavingStrategy } from './strategies/class-weaving-strategy';\nimport { _MethodWeavingStrategy } from './strategies/method-weaving-strategy';\nimport { _ParameterWeavingStrategy } from './strategies/parameter-weaving-strategy';\nimport { _PropertyGetWeavingStrategy } from './strategies/property-get-weaving-strategy';\nimport { _PropertySetWeavingStrategy } from './strategies/property-set-weaving-strategy';\n\n/**\n * The JitWeaver wires up advices to the corresponding annotations as soon as the annotation gets processed by JS interpreter.\n * @public\n */\nexport class JitWeaver extends WeaverProfile implements Weaver {\n    private _planFactory: _AdviceExecutionPlanFactory;\n    private _enhancers = {\n        [AnnotationType.CLASS]: this._enhanceClass.bind(this),\n        [AnnotationType.PROPERTY]: this._enhanceProperty.bind(this),\n        [AnnotationType.METHOD]: this._enhanceMethod.bind(this),\n        [AnnotationType.PARAMETER]: this._enhanceParameter.bind(this),\n    };\n    /**\n     *\n     * @param _context - the weaver context to attach this weaver to.\n     * @param _prod - When prod mode is activated, enabling an aspect after Annotation compilation is prohibed.\n     */\n    constructor(private _context: WeaverContext, private _prod = true) {\n        super();\n        this._planFactory = new _AdviceExecutionPlanFactory();\n    }\n\n    enable(...aspects: (AspectType | WeaverProfile)[]): this {\n        const _aspects = new WeaverProfile().enable(...aspects).getAspects();\n        try {\n            this._context.aspects.registry.register(..._aspects);\n            if (this._prod) {\n                // check annotations has not already been processed\n                const alreadyProcessedAnnotations = new Map<Pointcut, AspectType>();\n                _aspects.forEach((aspect) => {\n                    this._context.aspects.registry\n                        .getAdvicesByAspect(aspect)\n                        .forEach((a) => alreadyProcessedAnnotations.set(a.pointcut, aspect));\n                });\n\n                alreadyProcessedAnnotations.forEach((aspect: AspectType, pointcut: Pointcut) => {\n                    if (this._context.annotations.bundle.all(pointcut.annotation.ref).length) {\n                        throw new WeavingError(\n                            `Cannot enable aspect ${aspect.constructor?.name ?? aspect} because annotation ${\n                                pointcut.annotation\n                            } has already been applied`,\n                        );\n                    }\n                });\n            }\n\n            const r = super.enable(..._aspects);\n            _aspects.filter((a) => isFunction(a.onEnable)).forEach((a) => a.onEnable.call(a, this));\n\n            return r;\n        } catch (e) {\n            this._context.aspects.registry.remove(..._aspects);\n            throw e;\n        }\n    }\n\n    disable(...aspects: (AspectType | WeaverProfile)[]): this {\n        const _aspects = new WeaverProfile().enable(...aspects).getAspects();\n        _aspects.filter((a) => isFunction(a.onDisable)).forEach((a) => a.onEnable.call(a, this));\n\n        return super.disable(..._aspects);\n    }\n\n    reset(): this {\n        this._planFactory = new _AdviceExecutionPlanFactory();\n        return super.reset();\n    }\n\n    enhance<T>(target: AnnotationTarget<T>): void | Function | PropertyDescriptor {\n        const ctxt = new AdviceContextImpl(target, this._context.annotations.bundle.at(target.location));\n\n        return this._enhancers[target.type](ctxt);\n    }\n\n    private _enhanceClass<T>(ctxt: MutableAdviceContext<T, AdviceType.CLASS>): new (...args: any[]) => T {\n        const plan = this._planFactory.create(ctxt.target, new _ClassWeavingStrategy());\n        return plan.compile(ctxt).link();\n    }\n\n    private _enhanceProperty<T>(ctxt: MutableAdviceContext<T, AdviceType.PROPERTY>): PropertyDescriptor {\n        const getterHooks = new _PropertyGetWeavingStrategy();\n        const gettersPlan = this._planFactory.create(ctxt.target, getterHooks, {\n            name: 'get',\n            fn: _isPropertyGet,\n        });\n\n        const newDescriptor = gettersPlan.compile(ctxt).link();\n\n        if (_isDescriptorWritable(newDescriptor)) {\n            const settersPlan = this._planFactory.create(ctxt.target, new _PropertySetWeavingStrategy(getterHooks), {\n                name: 'set',\n                fn: _isPropertySet,\n            });\n\n            newDescriptor.set = settersPlan.compile(ctxt).link().set;\n            delete newDescriptor.writable;\n        } else {\n            delete newDescriptor.set;\n        }\n\n        const target = ctxt.target;\n        Reflect.defineProperty(target.proto, target.propertyKey, newDescriptor);\n\n        return newDescriptor;\n    }\n\n    private _enhanceMethod<T>(ctxt: MutableAdviceContext<T, AdviceType.METHOD>): PropertyDescriptor {\n        const plan = this._planFactory.create(ctxt.target, new _MethodWeavingStrategy());\n        return plan.compile(ctxt).link();\n    }\n\n    private _enhanceParameter<T>(ctxt: MutableAdviceContext<T, AdviceType.METHOD>): PropertyDescriptor {\n        const plan = this._planFactory.create(ctxt.target, new _ParameterWeavingStrategy());\n        return plan.compile(ctxt).link();\n    }\n}\n\nfunction _isPropertyGet(a: Advice) {\n    return a.pointcut.ref.startsWith('property#get');\n}\n\nfunction _isPropertySet(a: Advice) {\n    return a.pointcut.ref.startsWith('property#set');\n}\n\nfunction _isDescriptorWritable(propDescriptor: PropertyDescriptor) {\n    const desc = propDescriptor as Record<string, any>;\n    return !desc || (desc.hasOwnProperty('writable') && desc.writable) || isFunction(desc.set);\n}\n\nclass AdviceContextImpl<T, A extends AdviceType> implements MutableAdviceContext<unknown, A> {\n    public advice: Advice<T, A>;\n    public error: Error;\n    public instance: T;\n    public value: T | unknown;\n    public args: any[];\n    public joinpoint: JoinPoint;\n    public target: AdviceTarget<T, A>;\n    public data: Record<string, any>;\n    public annotations: AnnotationsBundle;\n\n    constructor(target: AdviceTarget<any, A>, bundle: AnnotationsBundle<T>) {\n        this.target = target;\n        this.data = {};\n        this.annotations = bundle;\n    }\n\n    clone(): this {\n        return Object.assign(Object.create(Reflect.getPrototypeOf(this)) as MutableAdviceContext<unknown, A>, this);\n    }\n\n    toString(): string {\n        return `${this.advice} on ${this.target.label}`;\n    }\n}\n"],"names":[],"mappings":"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"}