{"version":3,"file":"annotation.registry.js","sources":["../../../../../../commons/src/annotation/registry/annotation.registry.ts"],"sourcesContent":["import { locator } from '@aspectjs/core/utils';\nimport { AnnotationType } from '../annotation.types';\nimport { AnnotationBundleRegistry } from '../bundle/bundle';\nimport { AnnotationContext } from '../context/annotation.context';\n\n/**\n * @public\n */\nexport class AnnotationRegistry {\n    constructor(private readonly _bundleRegistry: AnnotationBundleRegistry) {}\n\n    /**\n     * Registers a new annotation by its AnnotationContext,\n     * so that it can be picked up wy an annotation weaver, or used through AnnotationBundle\n     * @param context - the annotation context to register\n     */\n    register<A extends AnnotationType, T = unknown>(context: AnnotationContext<T, A>) {\n        const byTargetReg = locator(this._bundleRegistry.byTargetClassRef)\n            .at(context.target.declaringClass.ref)\n            .orElseCompute(() => ({\n                byAnnotation: {},\n                all: [],\n            }));\n\n        [byTargetReg, this._bundleRegistry].forEach((reg) => {\n            locator(reg.byAnnotation)\n                .at(context.ref)\n                .orElseCompute(() => [])\n                .push(context);\n        });\n\n        byTargetReg.all.push(context);\n    }\n}\n"],"names":[],"mappings":";;AAKA;;;MAGa,kBAAkB;IAC3B,YAA6B,eAAyC;QAAzC,oBAAe,GAAf,eAAe,CAA0B;KAAI;;;;;;IAO1E,QAAQ,CAAwC,OAAgC;QAC5E,MAAM,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC;aAC7D,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC;aACrC,aAAa,CAAC,OAAO;YAClB,YAAY,EAAE,EAAE;YAChB,GAAG,EAAE,EAAE;SACV,CAAC,CAAC,CAAC;QAER,CAAC,WAAW,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG;YAC5C,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;iBACpB,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC;iBACf,aAAa,CAAC,MAAM,EAAE,CAAC;iBACvB,IAAI,CAAC,OAAO,CAAC,CAAC;SACtB,CAAC,CAAC;QAEH,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACjC;;;;;"}