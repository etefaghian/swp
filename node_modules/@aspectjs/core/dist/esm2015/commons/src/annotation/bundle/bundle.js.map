{"version":3,"file":"bundle.js","sources":["../../../../../../commons/src/annotation/bundle/bundle.ts"],"sourcesContent":["import { isString, locator } from '@aspectjs/core/utils';\nimport { Annotation, AnnotationRef, AnnotationType } from '../annotation.types';\nimport { AnnotationContext } from '../context/annotation.context';\nimport {\n    AnnotationLocation,\n    ClassAnnotationLocation,\n    MethodAnnotationLocation,\n    ParametersAnnotationLocation,\n    PropertyAnnotationLocation,\n} from '../location/annotation-location';\nimport { AnnotationLocationFactory } from '../location/location.factory';\nimport { AnnotationTarget } from '../target/annotation-target';\n\n/**\n * @public\n */\nexport type AnnotationBundleRegistry<T = unknown, A extends AnnotationType = any> = {\n    byTargetClassRef: {\n        [classTargetRef: string]: {\n            byAnnotation: {\n                [annotationRef: string]: AnnotationContext[];\n            };\n            all: AnnotationContext[];\n        };\n    };\n    byAnnotation: {\n        [annotationRef: string]: AnnotationContext[];\n    };\n};\n\n/**\n * @public\n */\nexport type AnnotationsBundle<T = unknown> =\n    | ClassAnnotationsBundle<T>\n    | MethodAnnotationsBundle<T>\n    | ParameterAnnotationsBundle<T>\n    | PropertyAnnotationsBundle<T>;\n\n/**\n * @public\n */\nexport interface PropertyAnnotationsBundle<T = unknown> {\n    all(\n        ...annotation: (Annotation<AnnotationType.PROPERTY> | string | AnnotationRef)[]\n    ): readonly AnnotationContext<unknown, AnnotationType.PROPERTY>[];\n\n    onProperty(\n        ...annotation: (Annotation<AnnotationType.PROPERTY> | string | AnnotationRef)[]\n    ): readonly AnnotationContext<T, AnnotationType.PROPERTY>[];\n\n    onSelf(\n        ...annotation: (Annotation<AnnotationType.PROPERTY> | string | AnnotationRef)[]\n    ): readonly AnnotationContext<T, AnnotationType.PROPERTY>[];\n}\n\n/**\n * @public\n */\nexport interface MethodAnnotationsBundle<T = unknown> {\n    all(\n        ...annotation: (Annotation<AnnotationType.METHOD | AnnotationType.PARAMETER> | string | AnnotationRef)[]\n    ): readonly AnnotationContext<T, AnnotationType.METHOD | AnnotationType.PARAMETER>[];\n    onParameter(\n        ...annotation: (Annotation<AnnotationType.PARAMETER> | string | AnnotationRef)[]\n    ): readonly AnnotationContext<T, AnnotationType.PARAMETER>[];\n\n    onMethod(\n        ...annotation: (Annotation<AnnotationType.METHOD> | string | AnnotationRef)[]\n    ): readonly AnnotationContext<T, AnnotationType.METHOD | AnnotationType.PARAMETER>[];\n\n    onSelf(\n        ...annotation: (Annotation<AnnotationType.METHOD> | string | AnnotationRef)[]\n    ): readonly AnnotationContext<T, AnnotationType.METHOD | AnnotationType.PARAMETER>[];\n}\n/**\n * @public\n */\nexport interface ParameterAnnotationsBundle<T = unknown> {\n    all(\n        ...annotation: (Annotation<AnnotationType.PARAMETER> | string | AnnotationRef)[]\n    ): readonly AnnotationContext<T, AnnotationType.PARAMETER>[];\n\n    onSelf(\n        ...annotation: (Annotation<AnnotationType.PARAMETER> | string | AnnotationRef)[]\n    ): readonly AnnotationContext<T, AnnotationType.PARAMETER>[];\n\n    onParameter(\n        ...annotation: (Annotation<AnnotationType.PARAMETER> | string | AnnotationRef)[]\n    ): readonly AnnotationContext<T, AnnotationType.PARAMETER>[];\n}\n\n/**\n * @public\n */\nexport class RootAnnotationsBundle {\n    constructor(protected _registry: AnnotationBundleRegistry) {}\n    at<T>(location: MethodAnnotationLocation<T>, searchParents?: boolean): MethodAnnotationsBundle<T>;\n    at<T>(location: ParametersAnnotationLocation<T>, searchParents?: boolean): ParameterAnnotationsBundle<T>;\n    at<T>(location: PropertyAnnotationLocation<T>, searchParents?: boolean): PropertyAnnotationsBundle<T>;\n    at<T>(location: ClassAnnotationLocation<T>, searchParents?: boolean): ClassAnnotationsBundle<T>;\n    at<T>(location: AnnotationLocation<T>, searchParents?: boolean): AnnotationsBundle<T>;\n    at<T>(location: AnnotationLocation<T>, searchParents = true): AnnotationsBundle<T> {\n        return new ClassAnnotationsBundle<T>(this._registry, location, searchParents);\n    }\n\n    all(...annotations: (Annotation | string | AnnotationRef)[]): readonly AnnotationContext[] {\n        if (annotations && annotations.length === 1) {\n            return locator(this._registry.byAnnotation)\n                .at(getAnnotationRef(annotations[0]))\n                .orElseGet(() => []);\n        }\n\n        let entries = Object.entries(this._registry.byAnnotation);\n        if (annotations && annotations.length) {\n            const annotationsSet = new Set<string>(annotations.map((a) => getAnnotationRef(a)));\n            entries = entries.filter((e) => annotationsSet.has(e[0]));\n        }\n        return entries.map((e) => e[1]).flat();\n    }\n}\n\n/**\n * @public\n */\nexport class ClassAnnotationsBundle<T = unknown> extends RootAnnotationsBundle {\n    private _target: AnnotationTarget;\n    constructor(registry: AnnotationBundleRegistry, location: AnnotationLocation, private searchParents: boolean) {\n        super(registry);\n        this._target = AnnotationLocationFactory.getTarget(location);\n    }\n    all(...annotations: (Annotation | string | AnnotationRef)[]): readonly AnnotationContext<T>[] {\n        return this._allWithFilter(this._target, 'all', annotations) as AnnotationContext<T>[];\n    }\n\n    onClass(\n        ...annotations: (Annotation<AnnotationType.CLASS> | string | AnnotationRef)[]\n    ): readonly AnnotationContext<T, AnnotationType.CLASS>[] {\n        return this._allWithFilter(this._target, AnnotationType.CLASS, annotations) as AnnotationContext<\n            T,\n            AnnotationType.CLASS\n        >[];\n    }\n\n    onSelf(\n        ...annotations: (Annotation<AnnotationType.CLASS> | string | AnnotationRef)[]\n    ): readonly AnnotationContext<T, AnnotationType.CLASS>[] {\n        return this._allWithFilter(this._target, this._target.type, annotations) as AnnotationContext<\n            T,\n            AnnotationType.CLASS\n        >[];\n    }\n\n    onProperty(\n        ...annotations: (Annotation<AnnotationType.PROPERTY> | string | AnnotationRef)[]\n    ): readonly AnnotationContext<T, AnnotationType.PROPERTY>[] {\n        return this._allWithFilter(this._target, AnnotationType.PROPERTY, annotations) as AnnotationContext<\n            T,\n            AnnotationType.PROPERTY\n        >[];\n    }\n    onMethod(\n        ...annotations: (Annotation<AnnotationType.METHOD> | string | AnnotationRef)[]\n    ): readonly AnnotationContext<T, AnnotationType.METHOD>[] {\n        return this._allWithFilter(this._target, AnnotationType.METHOD, annotations) as AnnotationContext<\n            T,\n            AnnotationType.METHOD\n        >[];\n    }\n    onParameter(\n        ...annotations: (Annotation<AnnotationType.PARAMETER> | string | AnnotationRef)[]\n    ): readonly AnnotationContext<T, AnnotationType.PARAMETER>[] {\n        return this._allWithFilter(this._target, AnnotationType.PARAMETER, annotations) as AnnotationContext<\n            T,\n            AnnotationType.PARAMETER\n        >[];\n    }\n\n    private _allWithFilter(\n        target: AnnotationTarget,\n        filter: keyof Filters[AnnotationType],\n        annotations: (Annotation | string | AnnotationRef)[],\n    ): AnnotationContext<T>[] {\n        if (!target) {\n            return [];\n        }\n\n        const parentContext: AnnotationContext[] =\n            target.parentClass && this.searchParents\n                ? this._allWithFilter(target.parentClass, filter, annotations)\n                : [];\n        const reg = locator(this._registry.byTargetClassRef).at(target.declaringClass.ref).get();\n\n        if (!reg) {\n            return parentContext as AnnotationContext<T>[];\n        }\n\n        const annotationsRef = (annotations ?? []).map(getAnnotationRef);\n        let contexts = reg.all;\n        if (annotationsRef.length) {\n            contexts = annotationsRef\n                .map((annotationRef) =>\n                    locator(reg.byAnnotation)\n                        .at(annotationRef)\n                        .orElseGet(() => []),\n                )\n                .flat();\n        }\n        contexts = contexts.filter((a) => FILTERS[target.type][filter](target, a)) as AnnotationContext<T>[];\n\n        return [...parentContext, ...contexts] as AnnotationContext<T>[];\n    }\n}\n//\n// const b: RootAnnotationsBundle = undefined;\n//\n// const o = { attr: '', method() {} };\n// const l = AnnotationLocation.of(o);\n// b.at(AnnotationLocation.of(o)).all();\n//\n// b.at(AnnotationLocation.of(o).attr).all();\n// b.at(AnnotationLocation.of(o).attr).onProperty();\n// b.at(AnnotationLocation.of(o).attr).onMethod();\n// b.at(AnnotationLocation.of(o).attr).onParameter();\n//\n// b.at(AnnotationLocation.of(o).method).all();\n// b.at(AnnotationLocation.of(o).method).onProperty();\n// b.at(AnnotationLocation.of(o).method).onMethod();\n// b.at(AnnotationLocation.of(o).method).onParameter();\n//\n// b.at(AnnotationLocation.of(o).method.args).all();\n// b.at(AnnotationLocation.of(o).method.args).onProperty();\n// b.at(AnnotationLocation.of(o).method.args).onMethod();\n// b.at(AnnotationLocation.of(o).method.args).onParameter();\n\ntype Filters = {\n    [atLocation in AnnotationType]: {\n        all(target: AnnotationTarget, a: AnnotationContext): boolean;\n        [AnnotationType.CLASS](target: AnnotationTarget, a: AnnotationContext): boolean;\n        [AnnotationType.PROPERTY](target: AnnotationTarget, a: AnnotationContext): boolean;\n        [AnnotationType.METHOD](target: AnnotationTarget, a: AnnotationContext): boolean;\n        [AnnotationType.PARAMETER](target: AnnotationTarget, a: AnnotationContext): boolean;\n    };\n};\nconst falseFilter = () => false;\n\nconst FILTERS: Filters = {\n    [AnnotationType.CLASS]: {\n        all(target: AnnotationTarget, a: AnnotationContext) {\n            // keep all if location is the class\n            return true;\n        },\n        [AnnotationType.CLASS](target: AnnotationTarget, a: AnnotationContext) {\n            // keep only annotations on classes\n            return a.target.type === AnnotationType.CLASS;\n        },\n        [AnnotationType.PROPERTY](target: AnnotationTarget, a: AnnotationContext) {\n            // keep only annotations on properties\n            return a.target.type === AnnotationType.PROPERTY;\n        },\n\n        [AnnotationType.METHOD](target: AnnotationTarget, a: AnnotationContext) {\n            // keep only annotations on properties\n            return a.target.type === AnnotationType.METHOD;\n        },\n\n        [AnnotationType.PARAMETER](target: AnnotationTarget, a: AnnotationContext) {\n            // keep only annotations on properties\n            return a.target.type === AnnotationType.PARAMETER;\n        },\n    },\n    [AnnotationType.PROPERTY]: {\n        all(target: AnnotationTarget, a: AnnotationContext) {\n            // keep if same propertyKey\n            return target.propertyKey === a.target.propertyKey;\n        },\n        [AnnotationType.CLASS]: falseFilter,\n        [AnnotationType.PROPERTY](target: AnnotationTarget, a: AnnotationContext) {\n            return FILTERS[target.type].all(target, a);\n        },\n        [AnnotationType.METHOD]: falseFilter,\n        [AnnotationType.PARAMETER]: falseFilter,\n    },\n    [AnnotationType.METHOD]: {\n        all(target: AnnotationTarget, a: AnnotationContext) {\n            const aTarget = a.target;\n\n            // keep if same propertyKey\n            return (\n                target.propertyKey === aTarget.propertyKey &&\n                (aTarget.type === AnnotationType.PARAMETER || aTarget.type === AnnotationType.METHOD)\n            );\n        },\n        [AnnotationType.CLASS]: falseFilter,\n        [AnnotationType.PROPERTY]: falseFilter,\n        [AnnotationType.METHOD](target: AnnotationTarget, a: AnnotationContext) {\n            return (\n                // keep only annotations on properties\n                a.target.type === AnnotationType.METHOD &&\n                // keep only the required method if location is the method\n                target.propertyKey === a.target.propertyKey\n            );\n        },\n\n        [AnnotationType.PARAMETER](target: AnnotationTarget, a: AnnotationContext) {\n            return (\n                // keep only annotations on properties\n                a.target.type === AnnotationType.PARAMETER &&\n                // keep all parameters on method if location is the method\n                target.propertyKey === a.target.propertyKey\n            );\n        },\n    },\n    [AnnotationType.PARAMETER]: {\n        all(target: AnnotationTarget, a: AnnotationContext) {\n            const aTarget = a.target;\n\n            return (\n                // keep if same propertyKey\n                target.propertyKey === aTarget.propertyKey &&\n                // keep parameters if location is parameters\n                aTarget.type === AnnotationType.PARAMETER &&\n                (isNaN(target.parameterIndex) || target.parameterIndex === aTarget.parameterIndex)\n            );\n        },\n        [AnnotationType.CLASS]: falseFilter,\n        [AnnotationType.PROPERTY]: falseFilter,\n        [AnnotationType.METHOD]: falseFilter,\n        [AnnotationType.PARAMETER](target: AnnotationTarget, a: AnnotationContext) {\n            return FILTERS[target.type].all(target, a);\n        },\n    },\n};\n\nfunction getAnnotationRef(annotation: Annotation | string | AnnotationRef): string {\n    return isString(annotation) ? (annotation as string) : annotation?.ref;\n}\n"],"names":[],"mappings":"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"}