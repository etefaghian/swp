{"version":3,"file":"location.factory.js","sources":["../../../../../../commons/src/annotation/location/location.factory.ts"],"sourcesContent":["import { AdviceType } from '../../advices/types';\nimport { AnnotationTarget, ClassAdviceTarget } from '../target/annotation-target';\nimport { AnnotationLocation, ClassAnnotationLocation } from './annotation-location';\nimport { AnnotationTargetFactory } from '../target/annotation-target.factory';\nimport { getProto } from '@aspectjs/core/utils';\n\n/**\n * @public\n */\nexport class AnnotationLocationFactory {\n    constructor(private _targetFactory: AnnotationTargetFactory) {}\n\n    of<T>(obj: (new () => T) | T): ClassAnnotationLocation<T> {\n        const proto = getProto(obj);\n        if (proto === Object.prototype) {\n            throw new Error('given object is neither a constructor nor a class instance');\n        }\n\n        const target = this._targetFactory.create({\n            proto,\n            type: AdviceType.CLASS,\n        }).declaringClass as ClassAdviceTarget<T>;\n\n        return target.location;\n    }\n\n    static getTarget<T>(location: AnnotationLocation<T>): AnnotationTarget<T> {\n        if (!location) {\n            return undefined;\n        }\n        return Object.getPrototypeOf(location).getTarget();\n    }\n}\n"],"names":["AdviceType"],"mappings":";;;AAMA;;;MAGa,yBAAyB;IAClC,YAAoB,cAAuC;QAAvC,mBAAc,GAAd,cAAc,CAAyB;KAAI;IAE/D,EAAE,CAAI,GAAsB;QACxB,MAAM,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;QAC5B,IAAI,KAAK,KAAK,MAAM,CAAC,SAAS,EAAE;YAC5B,MAAM,IAAI,KAAK,CAAC,4DAA4D,CAAC,CAAC;SACjF;QAED,MAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;YACtC,KAAK;YACL,IAAI,EAAEA,cAAU,CAAC,KAAK;SACzB,CAAC,CAAC,cAAsC,CAAC;QAE1C,OAAO,MAAM,CAAC,QAAQ,CAAC;KAC1B;IAED,OAAO,SAAS,CAAI,QAA+B;QAC/C,IAAI,CAAC,QAAQ,EAAE;YACX,OAAO,SAAS,CAAC;SACpB;QACD,OAAO,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC;KACtD;;;;;"}