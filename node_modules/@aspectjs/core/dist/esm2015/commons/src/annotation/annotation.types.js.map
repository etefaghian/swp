{"version":3,"file":"annotation.types.js","sources":["../../../../../commons/src/annotation/annotation.types.ts"],"sourcesContent":["/**\n * @public\n */\nimport { assert } from '@aspectjs/core/utils';\n\n/**\n * @public\n */\nexport enum AnnotationType { // TODO use binary-mask values\n    CLASS = 'AnnotationType.CLASS',\n    PROPERTY = 'AnnotationType.PROPERTY',\n    METHOD = 'AnnotationType.METHOD',\n    PARAMETER = 'AnnotationType.PARAMETER',\n}\n\n/**\n * @public\n */\nexport class AnnotationRef {\n    public readonly ref: string;\n    public readonly name: string;\n    public readonly groupId: string;\n\n    constructor(ref: string);\n    constructor(groupId: string, name: string);\n    constructor(groupIdOrRef: string, name?: string) {\n        if (!name) {\n            this.ref = groupIdOrRef;\n            const ANNOTATION_REF_REGEX = /(?<groupId>\\S+):(?<name>\\S+)/;\n            const macth = ANNOTATION_REF_REGEX.exec(this.ref);\n            this.groupId = macth.groups.groupId;\n            this.name = macth.groups.name;\n        } else {\n            this.ref = `${groupIdOrRef}:${name}`;\n            this.name = name;\n            this.groupId = groupIdOrRef;\n        }\n        if (!this.name) {\n            assert(false);\n            throw new Error('cannot create annotation without name');\n        }\n\n        if (!this.groupId) {\n            throw new Error('cannot create annotation without groupId');\n        }\n\n        Object.defineProperty(this, Symbol.toPrimitive, {\n            enumerable: false,\n            value: () => {\n                return `@${this.name}`;\n            },\n        });\n    }\n\n    toString(): string {\n        return `@${this.groupId}:${this.name}`;\n    }\n}\n\n/**\n * @public\n */\nexport type AnnotationStub<T extends Decorator> = (\n    ...args: any[]\n) => T & {\n    name: string;\n};\n\n/**\n * An Annotation is an EcmaScript decorator with no behavior.\n * It relies on an aspect weaver configured with proper aspects to get things done.\n * @public\n */\nexport type Annotation<T extends AnnotationType = any> = (T extends AnnotationType.CLASS\n    ? ClassAnnotation\n    : T extends AnnotationType.METHOD\n    ? MethodAnnotation\n    : T extends AnnotationType.PARAMETER\n    ? ParameterAnnotation\n    : T extends AnnotationType.PROPERTY\n    ? PropertyAnnotation\n    : never) & // eslint-disable-next-line @typescript-eslint/ban-types\n    Function &\n    AnnotationRef;\n\n/**\n * @public\n */\nexport type Decorator<TFunction extends Function = any, T = any> = (\n    target: TFunction | Object,\n    propertyKey?: string | symbol,\n    descriptor?: TypedPropertyDescriptor<T> | number,\n) => TFunction | void | TypedPropertyDescriptor<T>;\n\n/**\n * @public\n */\nexport type ClassAnnotation = AnnotationStub<ClassDecorator> & AnnotationRef;\n/**\n * @public\n */\nexport type MethodAnnotation = AnnotationStub<MethodDecorator> & AnnotationRef;\n/**\n * @public\n */\nexport type ParameterAnnotation = AnnotationStub<ParameterDecorator> & AnnotationRef;\n/**\n * @public\n */\nexport type PropertyAnnotation = AnnotationStub<PropertyDecorator> & AnnotationRef;\n\n/**\n * @public\n */\nexport type ClassAnnotationStub = AnnotationStub<ClassDecorator>;\n/**\n * @public\n */\nexport type MethodAnnotationStub = AnnotationStub<MethodDecorator>;\n/**\n * @public\n */\nexport type PropertyAnnotationStub = AnnotationStub<PropertyDecorator>;\n/**\n * @public\n */\nexport type ParameterAnnotationStub = AnnotationStub<ParameterDecorator>;\n"],"names":[],"mappings":";;AAAA;;;AAKA;;;IAGY;AAAZ,WAAY,cAAc;IACtB,gDAA8B,CAAA;IAC9B,sDAAoC,CAAA;IACpC,kDAAgC,CAAA;IAChC,wDAAsC,CAAA;AAC1C,CAAC,EALW,cAAc,KAAd,cAAc,QAKzB;AAED;;;MAGa,aAAa;IAOtB,YAAY,YAAoB,EAAE,IAAa;QAC3C,IAAI,CAAC,IAAI,EAAE;YACP,IAAI,CAAC,GAAG,GAAG,YAAY,CAAC;YACxB,MAAM,oBAAoB,GAAG,8BAA8B,CAAC;YAC5D,MAAM,KAAK,GAAG,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC;YACpC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC;SACjC;aAAM;YACH,IAAI,CAAC,GAAG,GAAG,GAAG,YAAY,IAAI,IAAI,EAAE,CAAC;YACrC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC;SAC/B;QACD,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACZ,MAAM,CAAC,KAAK,CAAC,CAAC;YACd,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;SAC5D;QAED,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACf,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;SAC/D;QAED,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,MAAM,CAAC,WAAW,EAAE;YAC5C,UAAU,EAAE,KAAK;YACjB,KAAK,EAAE;gBACH,OAAO,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;aAC1B;SACJ,CAAC,CAAC;KACN;IAED,QAAQ;QACJ,OAAO,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;KAC1C;;;;;"}