{"version":3,"file":"joinpoint-factory.js","sources":["../../../../../commons/src/weaver/joinpoint-factory.ts"],"sourcesContent":["import { isArray, Mutable } from '@aspectjs/core/utils';\n\nimport { AroundAdvice, AroundContext } from '../advices';\nimport { JoinPoint } from '../types';\nimport { AdviceError } from './errors';\n\n/**\n * @internal\n */\nexport class _JoinpointFactory {\n    static create<T>(\n        advice: AroundAdvice<T>,\n        ctxt: Mutable<AroundContext<T>>,\n        fn: (...args: any[]) => any,\n    ): JoinPoint<T> {\n        function alreadyCalledFn(): void {\n            throw new AdviceError(advice, `joinPoint already proceeded`);\n        }\n\n        return function (args?: unknown[]) {\n            args = args ?? ctxt.args;\n            if (!isArray(args)) {\n                throw new AdviceError(advice, `Joinpoint arguments expected to be array. Got: ${args}`);\n            }\n            const jp = fn;\n            fn = alreadyCalledFn;\n            return jp.apply(ctxt.instance, args);\n        };\n    }\n}\n"],"names":[],"mappings":";;;AAMA;;;MAGa,iBAAiB;IAC1B,OAAO,MAAM,CACT,MAAuB,EACvB,IAA+B,EAC/B,EAA2B;QAE3B,SAAS,eAAe;YACpB,MAAM,IAAI,WAAW,CAAC,MAAM,EAAE,6BAA6B,CAAC,CAAC;SAChE;QAED,OAAO,UAAU,IAAgB;YAC7B,IAAI,GAAG,IAAI,aAAJ,IAAI,cAAJ,IAAI,GAAI,IAAI,CAAC,IAAI,CAAC;YACzB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBAChB,MAAM,IAAI,WAAW,CAAC,MAAM,EAAE,kDAAkD,IAAI,EAAE,CAAC,CAAC;aAC3F;YACD,MAAM,EAAE,GAAG,EAAE,CAAC;YACd,EAAE,GAAG,eAAe,CAAC;YACrB,OAAO,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;SACxC,CAAC;KACL;;;;;"}