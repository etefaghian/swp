!function(global,factory){"object"==typeof exports&&"undefined"!=typeof module?factory(exports,require("@aspectjs/core/utils"),require("@aspectjs/core/commons")):"function"==typeof define&&define.amd?define(["exports","@aspectjs/core/utils","@aspectjs/core/commons"],factory):factory(((global="undefined"!=typeof globalThis?globalThis:global||self).aspectjs=global.aspectjs||{},global.aspectjs.core_annotations={}),global.aspectjs.core_utils,global.aspectjs.core_commons)}(this,(function(exports,utils,commons){"use strict";var _globalAspectId=0,Aspect=commons.ASPECTJS_ANNOTATION_FACTORY.create((function(){var id=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return function(target){var _a,options=utils.isString(id)?{id:id}:null!==(_a=id)&&void 0!==_a?_a:{};if(void 0===options.id)options.id="AnonymousAspect#".concat(_globalAspectId++);else if(!utils.isString(options.id))throw new TypeError("Aspect ".concat(target.name," should have a string id. Got: ").concat(options.id));utils.setAspectOptions(target,options)}})),After=commons.ASPECTJS_ANNOTATION_FACTORY.create((function(pointcutExp){})),AfterReturn=commons.ASPECTJS_ANNOTATION_FACTORY.create((function(pointcutExp){})),AfterThrow=commons.ASPECTJS_ANNOTATION_FACTORY.create((function(pointcutExp){})),Around=commons.ASPECTJS_ANNOTATION_FACTORY.create((function(pointcutExp){})),Compile=commons.ASPECTJS_ANNOTATION_FACTORY.create((function(pointcutExp){})),Before=commons.ASPECTJS_ANNOTATION_FACTORY.create((function(pointcutExp){})),OrderAnnotation=commons.ASPECTJS_ANNOTATION_FACTORY.create((function(order){}));Object.defineProperties(OrderAnnotation,{LOWEST_PRECEDENCE:{writable:!1,value:1/0},HIGHEST_PRECEDENCE:{writable:!1,value:-1/0}});var Order=OrderAnnotation;exports.After=After,exports.AfterReturn=AfterReturn,exports.AfterThrow=AfterThrow,exports.Around=Around,exports.Aspect=Aspect,exports.Before=Before,exports.Compile=Compile,exports.Order=Order,exports.OrderAnnotation=OrderAnnotation}));
//# sourceMappingURL=annotations.umd.min.js.map
