{"version":3,"file":"annotations.js","sources":["../../annotations/src/aspect/aspect.annotation.ts","../../annotations/src/after/after.annotation.ts","../../annotations/src/after-return/after-return.annotation.ts","../../annotations/src/after-throw/after-throw.annotation.ts","../../annotations/src/around/around.annotation.ts","../../annotations/src/compile/compile.annotation.ts","../../annotations/src/before/before.annotation.ts","../../annotations/src/order.annotation.ts"],"sourcesContent":["import { isString, setAspectOptions, AspectOptions } from '@aspectjs/core/utils';\nimport { AnnotationRef, ASPECTJS_ANNOTATION_FACTORY } from '@aspectjs/core/commons';\n\n// TODO remove when https://github.com/microsoft/rushstack/issues/1050 is resolved\nAnnotationRef;\n\nlet _globalAspectId = 0;\n\n/**\n * @public\n */\nexport const Aspect = ASPECTJS_ANNOTATION_FACTORY.create(function Aspect(\n    id: string | AspectOptions = {},\n): ClassDecorator {\n    return function (target: Function) {\n        const options = isString(id) ? { id: id } : (id as AspectOptions) ?? {};\n\n        if (options.id === undefined) {\n            options.id = `AnonymousAspect#${_globalAspectId++}`;\n        } else if (!isString(options.id)) {\n            throw new TypeError(`Aspect ${target.name} should have a string id. Got: ${options.id}`);\n        }\n\n        setAspectOptions(target, options);\n    };\n});\n","import { AnnotationRef, PointcutExpression, ASPECTJS_ANNOTATION_FACTORY } from '@aspectjs/core/commons';\n\n// TODO remove when https://github.com/microsoft/rushstack/issues/1050 is resolved\nAnnotationRef;\n\n/**\n * @public\n */\nexport const After = ASPECTJS_ANNOTATION_FACTORY.create(function After(\n    pointcutExp: PointcutExpression,\n): MethodDecorator {\n    return;\n});\n","import { PointcutExpression, AnnotationRef, ASPECTJS_ANNOTATION_FACTORY } from '@aspectjs/core/commons';\n\n// TODO remove when https://github.com/microsoft/rushstack/issues/1050 is resolved\nAnnotationRef;\n\n/**\n * @public\n */\nexport const AfterReturn = ASPECTJS_ANNOTATION_FACTORY.create(function AfterReturn(\n    pointcutExp: PointcutExpression,\n): MethodDecorator {\n    return;\n});\n","import { PointcutExpression, AnnotationRef, ASPECTJS_ANNOTATION_FACTORY } from '@aspectjs/core/commons';\n\n// TODO remove when https://github.com/microsoft/rushstack/issues/1050 is resolved\nAnnotationRef;\n\n/**\n * @public\n */\nexport const AfterThrow = ASPECTJS_ANNOTATION_FACTORY.create(function AfterThrow(\n    pointcutExp: PointcutExpression,\n): MethodDecorator {\n    return;\n});\n","import { PointcutExpression, AnnotationRef, ASPECTJS_ANNOTATION_FACTORY } from '@aspectjs/core/commons';\n\n// TODO remove when https://github.com/microsoft/rushstack/issues/1050 is resolved\nAnnotationRef;\n\n/**\n * @public\n */\nexport const Around = ASPECTJS_ANNOTATION_FACTORY.create(function Around(\n    pointcutExp: PointcutExpression,\n): MethodDecorator {\n    return;\n});\n","import { PointcutExpression, AnnotationRef, ASPECTJS_ANNOTATION_FACTORY } from '@aspectjs/core/commons';\n\n// TODO remove when https://github.com/microsoft/rushstack/issues/1050 is resolved\nAnnotationRef;\n\n/**\n * @public\n */\nexport const Compile = ASPECTJS_ANNOTATION_FACTORY.create(function Compile(\n    pointcutExp: PointcutExpression,\n): MethodDecorator {\n    return;\n});\n","import { PointcutExpression, AnnotationRef, ASPECTJS_ANNOTATION_FACTORY } from '@aspectjs/core/commons';\n\n// TODO remove when https://github.com/microsoft/rushstack/issues/1050 is resolved\nAnnotationRef;\n\n/**\n * @public\n */\nexport const Before = ASPECTJS_ANNOTATION_FACTORY.create(function Before(\n    pointcutExp: PointcutExpression,\n): MethodDecorator {\n    return;\n});\n","import { ASPECTJS_ANNOTATION_FACTORY, AnnotationRef, Decorator } from '@aspectjs/core/commons';\n\n// TODO remove when https://github.com/microsoft/rushstack/issues/1050 is resolved\nAnnotationRef;\n\n/**\n * @public\n */\nexport const OrderAnnotation = ASPECTJS_ANNOTATION_FACTORY.create(function Order(order: number): Decorator {\n    return;\n});\n\nObject.defineProperties(OrderAnnotation, {\n    LOWEST_PRECEDENCE: {\n        writable: false,\n        value: Infinity,\n    },\n    HIGHEST_PRECEDENCE: {\n        writable: false,\n        value: -Infinity,\n    },\n});\n/**\n * @public\n */\nexport type OrderType = typeof OrderAnnotation & {\n    LOWEST_PRECEDENCE: number;\n    HIGHEST_PRECEDENCE: number;\n};\n\n/**\n * @public\n */\nexport const Order = OrderAnnotation as OrderType;\n"],"names":[],"mappings":";;;AAMA,IAAI,eAAe,GAAG,CAAC,CAAC;AAExB;;;MAGa,MAAM,GAAG,2BAA2B,CAAC,MAAM,CAAC,SAAS,MAAM,CACpE,KAA6B,EAAE;IAE/B,OAAO,UAAU,MAAgB;;QAC7B,MAAM,OAAO,GAAG,QAAQ,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,SAAI,EAAoB,mCAAI,EAAE,CAAC;QAExE,IAAI,OAAO,CAAC,EAAE,KAAK,SAAS,EAAE;YAC1B,OAAO,CAAC,EAAE,GAAG,mBAAmB,eAAe,EAAE,EAAE,CAAC;SACvD;aAAM,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YAC9B,MAAM,IAAI,SAAS,CAAC,UAAU,MAAM,CAAC,IAAI,kCAAkC,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC;SAC5F;QAED,gBAAgB,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;KACrC,CAAC;AACN,CAAC;;ACpBD;;;MAGa,KAAK,GAAG,2BAA2B,CAAC,MAAM,CAAC,SAAS,KAAK,CAClE,WAA+B;IAE/B,OAAO;AACX,CAAC;;ACPD;;;MAGa,WAAW,GAAG,2BAA2B,CAAC,MAAM,CAAC,SAAS,WAAW,CAC9E,WAA+B;IAE/B,OAAO;AACX,CAAC;;ACPD;;;MAGa,UAAU,GAAG,2BAA2B,CAAC,MAAM,CAAC,SAAS,UAAU,CAC5E,WAA+B;IAE/B,OAAO;AACX,CAAC;;ACPD;;;MAGa,MAAM,GAAG,2BAA2B,CAAC,MAAM,CAAC,SAAS,MAAM,CACpE,WAA+B;IAE/B,OAAO;AACX,CAAC;;ACPD;;;MAGa,OAAO,GAAG,2BAA2B,CAAC,MAAM,CAAC,SAAS,OAAO,CACtE,WAA+B;IAE/B,OAAO;AACX,CAAC;;ACPD;;;MAGa,MAAM,GAAG,2BAA2B,CAAC,MAAM,CAAC,SAAS,MAAM,CACpE,WAA+B;IAE/B,OAAO;AACX,CAAC;;ACPD;;;MAGa,eAAe,GAAG,2BAA2B,CAAC,MAAM,CAAC,SAAS,KAAK,CAAC,KAAa;IAC1F,OAAO;AACX,CAAC,EAAE;AAEH,MAAM,CAAC,gBAAgB,CAAC,eAAe,EAAE;IACrC,iBAAiB,EAAE;QACf,QAAQ,EAAE,KAAK;QACf,KAAK,EAAE,QAAQ;KAClB;IACD,kBAAkB,EAAE;QAChB,QAAQ,EAAE,KAAK;QACf,KAAK,EAAE,CAAC,QAAQ;KACnB;CACJ,CAAC,CAAC;AASH;;;MAGa,KAAK,GAAG;;;;"}